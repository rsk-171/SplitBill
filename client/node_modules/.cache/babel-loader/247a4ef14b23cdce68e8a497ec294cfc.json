{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\HP\\\\Desktop\\\\New folder\\\\SplitBill\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\New folder\\\\SplitBill\\\\client\\\\src\\\\components\\\\Dashboard\\\\popups\\\\addExpense.js\";\nimport React from \"react\";\nimport \"../../../styles/frndPop.css\";\nimport { connect } from \"react-redux\";\nimport Chips, { Chip } from \"react-chips\";\nimport { instance } from \"../../../utils/AxiosConfig\";\nimport { store } from \"../../../redux/store\";\nimport { userActionCreator } from \"../../../redux/actionCreator/userAction\";\n\nclass AddExpense extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = chips => {\n      console.log(chips);\n      this.setState(_objectSpread({}, this.state, {\n        chips\n      }));\n    };\n\n    this.input = {};\n    this.state = {\n      chips: []\n    };\n  }\n\n  getdate() {\n    var today = new Date();\n    return today.getFullYear() + \"-\" + (\"0\" + (today.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + today.getDate()).slice(-2);\n  }\n\n  save() {\n    // console.log(\"clicked...\", this.state.chips, this.input);\n    this.input.amount = Math.round(parseInt(this.input.amount) / (this.state.chips.length + 1));\n\n    for (let value of this.state.chips) {\n      // console.log({username:this.props.user.username,user:value,inp:this.input});\n      instance.post('/addExp', {\n        username: this.props.user.username,\n        user: value,\n        inp: this.input\n      }).then(resp => {\n        console.log(\"*****************************00\", resp.data.doc);\n        var action = userActionCreator(resp.data.doc, 'AddUser');\n        store.dispatch(action);\n        this.props.friend();\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"friendPopup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"frnd-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"frnd-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Add an expense\"), React.createElement(\"button\", {\n      className: \"float-right\",\n      onClick: this.props.friend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-times\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"exp-inp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"With you and\"), React.createElement(\"div\", {\n      className: \"exp-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Chips, {\n      value: this.state.chips,\n      onChange: this.onChange,\n      suggestions: this.props.user.friends,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"exp-inp2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"description\",\n      type: \"text\",\n      placeholder: \"Enter Description\",\n      onChange: e => {\n        this.input[e.target.id] = e.target.value;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"amount\",\n      type: \"number\",\n      placeholder: \"Enter Amount\",\n      onChange: e => {\n        this.input[e.target.id] = e.target.value;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"date\",\n      type: \"date\",\n      onChange: e => {\n        this.input[e.target.id] = e.target.value;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"pop-btn pop-btns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn Add\",\n      onClick: this.save.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"button\", {\n      className: \"btn cut\",\n      onClick: this.props.friend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"state is  \", state);\n  return {\n    user: state.user\n  };\n};\n\nconst fn = connect(mapStateToProps);\nexport default fn(AddExpense);","map":{"version":3,"sources":["C:\\Users\\HP\\Desktop\\New folder\\SplitBill\\client\\src\\components\\Dashboard\\popups\\addExpense.js"],"names":["React","connect","Chips","Chip","instance","store","userActionCreator","AddExpense","Component","constructor","props","onChange","chips","console","log","setState","state","input","getdate","today","Date","getFullYear","getMonth","slice","getDate","save","amount","Math","round","parseInt","length","value","post","username","user","inp","then","resp","data","doc","action","dispatch","friend","render","friends","e","target","id","bind","mapStateToProps","fn"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"../../../styles/frndPop.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Chips, { Chip } from \"react-chips\";\r\nimport {instance} from \"../../../utils/AxiosConfig\";\r\nimport { store } from \"../../../redux/store\";\r\nimport { userActionCreator } from \"../../../redux/actionCreator/userAction\";\r\nclass AddExpense extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.input = {};\r\n    this.state = {\r\n      chips: []\r\n    };\r\n  }\r\n  getdate() {\r\n    var today = new Date();\r\n\r\n    return (\r\n      today.getFullYear() +\r\n      \"-\" +\r\n      (\"0\" + (today.getMonth() + 1)).slice(-2) +\r\n      \"-\" +\r\n      (\"0\" + today.getDate()).slice(-2)\r\n    );\r\n  }\r\n  onChange = chips => {\r\n    console.log(chips);\r\n    this.setState({ ...this.state, chips });\r\n  };\r\n  save() {\r\n    // console.log(\"clicked...\", this.state.chips, this.input);\r\n    this.input.amount = Math.round(parseInt(this.input.amount)/(this.state.chips.length + 1));\r\n  \r\n    for(let value of this.state.chips){\r\n      // console.log({username:this.props.user.username,user:value,inp:this.input});\r\n      instance.post('/addExp',{username:this.props.user.username,user:value,inp:this.input}).then((resp)=>{\r\n        console.log(\"*****************************00\",resp.data.doc);\r\n        var action = userActionCreator(resp.data.doc,'AddUser');\r\n       store.dispatch(action);\r\n        this.props.friend();\r\n      })\r\n\r\n      \r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"friendPopup\">\r\n        <div className=\"frnd-content\">\r\n          <div className=\"frnd-header\">\r\n            <span>Add an expense</span>\r\n            <button className=\"float-right\" onClick={this.props.friend}>\r\n              <i class=\"fas fa-times\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"exp-inp\">\r\n            <label htmlFor=\"\">With you and</label>\r\n            {/* <input id = \"username\"  placeholder = \"Enter friend name\" className = \"exp-name\" type=\"text\"/> */}\r\n            <div className=\"exp-name\">\r\n              <Chips\r\n                value={this.state.chips}\r\n                onChange={this.onChange}\r\n                suggestions={this.props.user.friends}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"exp-inp2\">\r\n            <input\r\n              id=\"description\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Description\"\r\n              onChange={e => {\r\n                this.input[e.target.id] = e.target.value;\r\n              }}\r\n            />\r\n            <input\r\n              id=\"amount\"\r\n              type=\"number\"\r\n              placeholder=\"Enter Amount\"\r\n              onChange={e => {\r\n                this.input[e.target.id] = e.target.value;\r\n              }}\r\n            />\r\n           <br/>\r\n           {/* value={this.getdate()} */}\r\n            <input\r\n              \r\n              id=\"date\"\r\n              type=\"date\"\r\n              onChange={e => {\r\n                this.input[e.target.id] = e.target.value;\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"pop-btn pop-btns\">\r\n            <button className=\"btn Add\" onClick={this.save.bind(this)}>\r\n              Save\r\n            </button>\r\n\r\n            <button className=\"btn cut\" onClick={this.props.friend}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(\"state is  \", state);\r\n  return {\r\n    user: state.user\r\n  };\r\n};\r\n\r\nconst fn = connect(mapStateToProps);\r\nexport default fn(AddExpense);\r\n"]},"metadata":{},"sourceType":"module"}