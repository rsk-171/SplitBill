{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\New folder\\\\SplitBill\\\\client\\\\src\\\\containers\\\\login_container.js\";\nimport React from 'react';\nimport { Login } from '../components/login';\nimport { instance } from '../utils/AxiosConfig';\nimport { withRouter } from \"react-router-dom\";\nimport setAuthorizationToken from \"../utils/AxiosConfig\";\n\nclass Login_smart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.input = {};\n    this.state = {\n      invalid: false\n    };\n  }\n\n  TakeInput(event) {\n    this.input[event.target.id] = event.target.value;\n  }\n\n  Login() {\n    // console.log('History is ',this.props.history.push(\"/Dashboard\"));\n    var pr = instance.post('/login', this.input);\n    pr.then(response => {\n      console.log(response.data);\n      const token = response.data.token;\n      localStorage.setItem('jwtToken', token);\n\n      if (response.data.Status == 'S') {\n        this.props.history.push(\"/Dashboard\");\n      } else if (response.data.Status == 'F') {\n        this.setState({\n          invalid: true\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(Login, {\n      sts: this.state.invalid,\n      input: this.TakeInput.bind(this),\n      login: this.Login.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default withRouter(Login_smart);","map":{"version":3,"sources":["C:\\Users\\HP\\Desktop\\New folder\\SplitBill\\client\\src\\containers\\login_container.js"],"names":["React","Login","instance","withRouter","setAuthorizationToken","Login_smart","Component","constructor","props","input","state","invalid","TakeInput","event","target","id","value","pr","post","then","response","console","log","data","token","localStorage","setItem","Status","history","push","setState","render","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,qBAAP,MAAkC,sBAAlC;;AACC,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAAyC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAb;AACH;;AACDC,EAAAA,SAAS,CAACC,KAAD,EAAO;AACZ,SAAKJ,KAAL,CAAWI,KAAK,CAACC,MAAN,CAAaC,EAAxB,IAA8BF,KAAK,CAACC,MAAN,CAAaE,KAA3C;AACH;;AACDf,EAAAA,KAAK,GAAE;AACH;AACJ,QAAIgB,EAAE,GAAGf,QAAQ,CAACgB,IAAT,CAAc,QAAd,EAAuB,KAAKT,KAA5B,CAAT;AAEAQ,IAAAA,EAAE,CAACE,IAAH,CAASC,QAAD,IAAY;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,YAAMC,KAAK,GAAGJ,QAAQ,CAACG,IAAT,CAAcC,KAA5B;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCF,KAAhC;;AAEA,UAAGJ,QAAQ,CAACG,IAAT,CAAcI,MAAd,IAAwB,GAA3B,EAA+B;AAC3B,aAAKnB,KAAL,CAAWoB,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACH,OAFD,MAGK,IAAGT,QAAQ,CAACG,IAAT,CAAcI,MAAd,IAAwB,GAA3B,EAA+B;AAClC,aAAKG,QAAL,CAAc;AAACnB,UAAAA,OAAO,EAAC;AAAT,SAAd;AACD;AACJ,KAXD;AAYC;;AACDoB,EAAAA,MAAM,GAAE;AACJ,WACA,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAI,KAAKrB,KAAL,CAAWC,OAAzB;AAAkC,MAAA,KAAK,EAAI,KAAKC,SAAL,CAAeoB,IAAf,CAAoB,IAApB,CAA3C;AAAsE,MAAA,KAAK,EAAI,KAAK/B,KAAL,CAAW+B,IAAX,CAAgB,IAAhB,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAGH;;AA/BqC;;AAkC1C,eAAe7B,UAAU,CAACE,WAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Login } from '../components/login';\r\nimport {instance} from '../utils/AxiosConfig';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport setAuthorizationToken from \"../utils/AxiosConfig\";\r\n class Login_smart extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.props = props;\r\n        this.input = {};\r\n        this.state = {invalid: false};\r\n    }\r\n    TakeInput(event){\r\n        this.input[event.target.id] = event.target.value;\r\n    }\r\n    Login(){\r\n        // console.log('History is ',this.props.history.push(\"/Dashboard\"));\r\n    var pr = instance.post('/login',this.input);\r\n\r\n    pr.then((response)=>{\r\n        console.log(response.data);\r\n        const token = response.data.token;\r\n        localStorage.setItem('jwtToken',token)\r\n        \r\n        if(response.data.Status == 'S'){\r\n            this.props.history.push(\"/Dashboard\");\r\n        }\r\n        else if(response.data.Status == 'F'){\r\n          this.setState({invalid:true});\r\n        }\r\n    })\r\n    }\r\n    render(){\r\n        return(\r\n        <Login sts = {this.state.invalid} input = {this.TakeInput.bind(this)} login = {this.Login.bind(this)}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Login_smart);"]},"metadata":{},"sourceType":"module"}