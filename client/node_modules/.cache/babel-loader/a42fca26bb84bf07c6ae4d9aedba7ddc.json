{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\HP\\\\Desktop\\\\New folder\\\\SplitBill\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\New folder\\\\SplitBill\\\\client\\\\src\\\\containers\\\\Dashboard.js\";\nimport React from 'react'; // import {connect} from 'react-redux';\n\nimport DashHeader from '../components/DashHeader';\nimport { AddFriend } from '../components/Dashboard/AddFriends';\nimport Middle from '../components/Dashboard/MiddleDashboard';\nimport { instance } from '../utils/AxiosConfig';\nimport { userActionCreator } from \"../redux/actionCreator/userAction\";\nimport { store } from \"../redux/store\";\nimport Friend from '../components/Dashboard/popups/Friend';\nimport \"../styles/Dashboard.css\";\nimport AddExpense from '../components/Dashboard/popups/addExpense';\nimport SettleUp from '../components/Dashboard/popups/settleUp';\nexport class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showFriend: false,\n      showExp: false,\n      settleUp: false\n    };\n  }\n\n  alwaysRun(username) {\n    console.log(\"this is username ...........\", username); //   if(username != undefined){\n    //     instance.post('/getData',{username: username}).then((resp)=>{\n    //                        console.log(\"this is response\",resp.data.user);\n    //                        var action = userActionCreator(resp.data.user,'AddUser');\n    //                        store.dispatch(action);\n    //                    })\n    //   }\n  } //  componentWillReceiveProps(nextprops){\n  //      let oldState = this.props.userInfo;\n  //      console.log(\"old state length \",oldState.friends.length);\n  //      console.log(\"nxt prop lenght \", nextprops.userInfo.friends.length);\n  //     if(oldState.friends.length != nextprops.userInfo.friends.length){\n  //         instance.post('/geftData',{username: nextprops.userInfo.username}).then((resp)=>{\n  //                console.log(\"this is response\",resp.data.user);\n  //                var action = userActionCreator(resp.data.user,'AddUser');\n  //                store.dispatch(action);\n  //            })\n  //         oldState = nextprops.userInfo;\n  //     }\n  //     console.log(\"old state length \",oldState.friends.length);\n  //     // console.log(\"will Mount \",nextprops.userInfo);\n  //     // instance.post('/getData',{username: nextprops.userInfo.username}).then((resp)=>{\n  //     //            console.log(\"this is response\",resp.data.user);\n  //     //            var action = userActionCreator(resp.data.user,'AddUser');\n  //     //            store.dispatch(action);\n  //     //        })\n  //  }   \n\n\n  componentDidMount() {\n    console.log(\"will Mount********************************************** \", localStorage.username);\n    instance.post('/getData', {\n      username: localStorage.username\n    }).then(resp => {\n      console.log(\"this is response\", resp.data.user);\n      var action = userActionCreator(resp.data.user, 'AddUser');\n      store.dispatch(action);\n    });\n  }\n\n  showFriend() {\n    this.setState(_objectSpread({}, this.state, {\n      showFriend: !this.state.showFriend\n    }));\n    console.log(this.state.showFriend);\n  }\n\n  showExpense() {\n    this.setState(_objectSpread({}, this.state, {\n      showExp: !this.state.showExp\n    }));\n    console.log(this.state.showExp);\n  }\n\n  settle() {\n    this.setState(_objectSpread({}, this.state, {\n      settleUp: !this.state.settleUp\n    }));\n    console.log(this.state.settleUp);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(DashHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), this.state.showFriend && React.createElement(Friend, {\n      friend: this.showFriend.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), this.state.showExp && React.createElement(AddExpense, {\n      friend: this.showExpense.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), this.state.settleUp && React.createElement(SettleUp, {\n      friend: this.settle.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(AddFriend, {\n      friend: this.showFriend.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Middle, {\n      friend: this.showExpense.bind(this),\n      settle: this.settle.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\HP\\Desktop\\New folder\\SplitBill\\client\\src\\containers\\Dashboard.js"],"names":["React","DashHeader","AddFriend","Middle","instance","userActionCreator","store","Friend","AddExpense","SettleUp","Dashboard","Component","constructor","props","state","showFriend","showExp","settleUp","alwaysRun","username","console","log","componentDidMount","localStorage","post","then","resp","data","user","action","dispatch","setState","showExpense","settle","render","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\n// import {connect} from 'react-redux';\r\nimport DashHeader from '../components/DashHeader';\r\nimport { AddFriend } from '../components/Dashboard/AddFriends';\r\nimport  Middle  from '../components/Dashboard/MiddleDashboard';\r\nimport {instance} from '../utils/AxiosConfig';\r\nimport {userActionCreator} from \"../redux/actionCreator/userAction\";\r\nimport { store } from \"../redux/store\"\r\nimport  Friend  from '../components/Dashboard/popups/Friend';\r\nimport \"../styles/Dashboard.css\"\r\nimport AddExpense from '../components/Dashboard/popups/addExpense';\r\nimport SettleUp  from '../components/Dashboard/popups/settleUp';\r\n\r\nexport class Dashboard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {showFriend: false,showExp:false,settleUp: false}\r\n\r\n    }\r\n\r\n    alwaysRun(username){\r\n      console.log(\"this is username ...........\",username);\r\n    //   if(username != undefined){\r\n    //     instance.post('/getData',{username: username}).then((resp)=>{\r\n    //                        console.log(\"this is response\",resp.data.user);\r\n    //                        var action = userActionCreator(resp.data.user,'AddUser');\r\n    //                        store.dispatch(action);\r\n    //                    })\r\n    //   }\r\n    }  \r\n//  componentWillReceiveProps(nextprops){\r\n//      let oldState = this.props.userInfo;\r\n//      console.log(\"old state length \",oldState.friends.length);\r\n//      console.log(\"nxt prop lenght \", nextprops.userInfo.friends.length);\r\n\r\n\r\n//     if(oldState.friends.length != nextprops.userInfo.friends.length){\r\n//         instance.post('/geftData',{username: nextprops.userInfo.username}).then((resp)=>{\r\n//                console.log(\"this is response\",resp.data.user);\r\n//                var action = userActionCreator(resp.data.user,'AddUser');\r\n//                store.dispatch(action);\r\n//            })\r\n//         oldState = nextprops.userInfo;\r\n//     }\r\n//     console.log(\"old state length \",oldState.friends.length);\r\n\r\n//     // console.log(\"will Mount \",nextprops.userInfo);\r\n//     // instance.post('/getData',{username: nextprops.userInfo.username}).then((resp)=>{\r\n//     //            console.log(\"this is response\",resp.data.user);\r\n//     //            var action = userActionCreator(resp.data.user,'AddUser');\r\n//     //            store.dispatch(action);\r\n//     //        })\r\n//  }   \r\ncomponentDidMount(){\r\n    console.log(\"will Mount********************************************** \",localStorage.username);\r\n   instance.post('/getData',{username: localStorage.username}).then((resp)=>{\r\n       console.log(\"this is response\",resp.data.user);\r\n       var action = userActionCreator(resp.data.user,'AddUser');\r\n       store.dispatch(action);\r\n   })\r\n}\r\n\r\nshowFriend(){\r\n     this.setState({...this.state,showFriend: !this.state.showFriend});\r\n     console.log(this.state.showFriend);\r\n}\r\nshowExpense(){\r\n    this.setState({...this.state,showExp: !this.state.showExp});\r\n    console.log(this.state.showExp);\r\n}  \r\n\r\nsettle(){\r\n    this.setState({...this.state,settleUp: !this.state.settleUp});\r\n    console.log(this.state.settleUp);\r\n}\r\nrender(){\r\n    \r\n    return(\r\n    <div >\r\n        {/* {this.alwaysRun(this.props.userInfo.username)} */}\r\n        <DashHeader/>\r\n        \r\n        {this.state.showFriend && <Friend friend = {this.showFriend.bind(this)}/>}\r\n        {this.state.showExp && <AddExpense friend = {this.showExpense.bind(this)}/>}\r\n        {this.state.settleUp && <SettleUp friend = {this.settle.bind(this)}/>}\r\n        \r\n        <div className =\"flex\">\r\n        <AddFriend  friend = {this.showFriend.bind(this)}/>\r\n        <Middle friend = {this.showExpense.bind(this)} settle = {this.settle.bind(this)}/>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}